
class Device:
    def __init__(self, brand, model):
        self.brand = brand
        self.model = model
        self._power = False  # Encapsulation: private attribute (using underscore)

    def power_on(self):
        self._power = True
        print(f"{self.brand} {self.model} is now ON.")

    def power_off(self):
        self._power = False
        print(f"{self.brand} {self.model} is now OFF.")

    def status(self):
        return "ON" if self._power else "OFF"


class Smartphone(Device):
    def __init__(self, brand, model, os, storage):
        super().__init__(brand, model)
        self.os = os
        self.storage = storage
        self.apps = []

    def install_app(self, app_name):
        self.apps.append(app_name)
        print(f"Installed {app_name} on {self.brand} {self.model}.")

    def list_apps(self):
        return self.apps if self.apps else "No apps installed."

    def status(self):
        base_status = super().status()
        return f"{self.brand} {self.model} is {base_status}. Running {len(self.apps)} apps."


class Tablet(Device):
    def __init__(self, brand, model, screen_size):
        super().__init__(brand, model)
        self.screen_size = screen_size

    def draw(self):
        if self._power:
            print(f"Drawing on {self.brand} {self.model}'s {self.screen_size}-inch screen.")
        else:
            print("Turn the tablet ON first!")

   
    def status(self):
        return f"Tablet {self.brand} {self.model} is {super().status()}."



phone1 = Smartphone("Samsung", "Galaxy S25", "Android", "256GB")
phone1.power_on()
phone1.install_app("WhatsApp")
phone1.install_app("Instagram")
print(phone1.status())
print(phone1.list_apps())

tablet1 = Tablet("Apple", "iPad Pro", 12.9)
tablet1.power_on()
tablet1.draw()
print(tablet1.status())


# activity2

class Vehicle:
    def move(self):
        raise NotImplementedError("Subclasses must implement this method")


class Car(Vehicle):
    def move(self):
        print("üöó Driving on the road...")

class Plane(Vehicle):
    def move(self):
        print("‚úàÔ∏è Flying in the sky...")

class Boat(Vehicle):
    def move(self):
        print("üö§ Sailing on the water...")

class Horse(Vehicle):  # Even animals can "move"!
    def move(self):
        print("üêé Galloping across the field...")

